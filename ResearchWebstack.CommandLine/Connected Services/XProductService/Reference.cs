//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ResearchWebstack.CommandLine.XProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitTest", Namespace="http://schemas.datacontract.org/2004/07/ResearchWebstack.Server")]
    [System.SerializableAttribute()]
    public partial class UnitTest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullyQuantiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamespaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullyQuantiedName {
            get {
                return this.FullyQuantiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullyQuantiedNameField, value) != true)) {
                    this.FullyQuantiedNameField = value;
                    this.RaisePropertyChanged("FullyQuantiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Namespace {
            get {
                return this.NamespaceField;
            }
            set {
                if ((object.ReferenceEquals(this.NamespaceField, value) != true)) {
                    this.NamespaceField = value;
                    this.RaisePropertyChanged("Namespace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="XProductService.IXProductService")]
    public interface IXProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXProductService/GetAllTests", ReplyAction="http://tempuri.org/IXProductService/GetAllTestsResponse")]
        ResearchWebstack.CommandLine.XProductService.UnitTest[] GetAllTests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXProductService/GetAllTests", ReplyAction="http://tempuri.org/IXProductService/GetAllTestsResponse")]
        System.Threading.Tasks.Task<ResearchWebstack.CommandLine.XProductService.UnitTest[]> GetAllTestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXProductService/GetFailTests", ReplyAction="http://tempuri.org/IXProductService/GetFailTestsResponse")]
        ResearchWebstack.CommandLine.XProductService.UnitTest[] GetFailTests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXProductService/GetFailTests", ReplyAction="http://tempuri.org/IXProductService/GetFailTestsResponse")]
        System.Threading.Tasks.Task<ResearchWebstack.CommandLine.XProductService.UnitTest[]> GetFailTestsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXProductServiceChannel : ResearchWebstack.CommandLine.XProductService.IXProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XProductServiceClient : System.ServiceModel.ClientBase<ResearchWebstack.CommandLine.XProductService.IXProductService>, ResearchWebstack.CommandLine.XProductService.IXProductService {
        
        public XProductServiceClient() {
        }
        
        public XProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ResearchWebstack.CommandLine.XProductService.UnitTest[] GetAllTests() {
            return base.Channel.GetAllTests();
        }
        
        public System.Threading.Tasks.Task<ResearchWebstack.CommandLine.XProductService.UnitTest[]> GetAllTestsAsync() {
            return base.Channel.GetAllTestsAsync();
        }
        
        public ResearchWebstack.CommandLine.XProductService.UnitTest[] GetFailTests() {
            return base.Channel.GetFailTests();
        }
        
        public System.Threading.Tasks.Task<ResearchWebstack.CommandLine.XProductService.UnitTest[]> GetFailTestsAsync() {
            return base.Channel.GetFailTestsAsync();
        }
    }
}
